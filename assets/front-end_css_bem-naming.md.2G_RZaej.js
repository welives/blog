import{_ as e,o as s,c,R as o}from"./chunks/framework.0ARc0mp4.js";const b=JSON.parse('{"title":"BEM命名法","description":"BEM命名法","frontmatter":{"title":"BEM命名法","head":[["meta",{"name":"description","content":"BEM命名法"}],["meta",{"name":"keywords","content":"bem css 命名规范"}]]},"headers":[],"relativePath":"front-end/css/bem-naming.md","filePath":"front-end/css/bem-naming.md","lastUpdated":1711386344000}'),a={name:"front-end/css/bem-naming.md"},i=o(`<h2 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h2><p><code>BEM命名法</code>，是对 CSS 命名的一种规范，将页面模块化，隔离样式，提高代码的复用性，减少后期的维护成本。BEM 的意思就是<code>Block(块)</code>、<code>Element(元素)</code>、<code>modifier(修饰符)</code>，利用不同的块，功能以及样式来给元素命名，通过双下划线<code>__</code>或者双中划<code>--</code>链接。</p><p>BEM 通常用于框架开发中，比如微信<code>WEUI</code>、饿了么<code>Element-ui</code>、有赞<code>Vant</code>等</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.block__element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.block--modifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><code>block</code>代表更高级别的抽象或组件</li><li><code>block__element</code>代表<code>block</code>的后代，用于形成一个完整的<code>block</code>的整体</li><li><code>block--modifier</code>代表<code>block</code>的不同状态或不同版本</li></ul></div><h2 id="常用规范" tabindex="-1">常用规范 <a class="header-anchor" href="#常用规范" aria-label="Permalink to &quot;常用规范&quot;">​</a></h2><ul><li><code>block</code>、<code>element</code>、<code>modifier</code>包含多个单词时，用一个中划线<code>-</code>链接,例如<code>el-dropdown-menuel-button</code></li><li><code>block</code>和<code>element</code>用双下划线<code>__</code>链接，例如<code>form__item</code>、<code>menu__item</code></li><li><code>element</code>和<code>modifier</code>用双中划线<code>--</code>链接，一般用来表示元素的不同状态，例如<code>el-button--default</code>、<code>el-button--success</code></li><li>用 JS 控制样式时，CSS 命名用<code>is-</code>开头，例如<code>is-success</code>、<code>is-failed</code>、<code>is-disabled</code></li></ul>`,7),n=[i];function d(l,t,p,r,m,h){return s(),c("div",null,n)}const _=e(a,[["render",d]]);export{b as __pageData,_ as default};
