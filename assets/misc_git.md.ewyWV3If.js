import{_ as e,o as l,c as i,R as t}from"./chunks/framework.0ARc0mp4.js";const _=JSON.parse('{"title":"git的常用命令","description":"git的常用命令","frontmatter":{"title":"git的常用命令","head":[["meta",{"name":"description","content":"git的常用命令"}],["meta",{"name":"keywords","content":"git 常用命令"}]]},"headers":[],"relativePath":"misc/git.md","filePath":"misc/git.md","lastUpdated":1726905494000}'),o={name:"misc/git.md"},c=t('<h2 id="全局配置" tabindex="-1">全局配置 <a class="header-anchor" href="#全局配置" aria-label="Permalink to &quot;全局配置&quot;">​</a></h2><ul><li><code>git config --global user.name &lt;name&gt;</code> 设置用户名</li><li><code>git config --global user.email &lt;email&gt;</code> 设置邮箱</li><li><code>git config --global core.autocrlf &lt;option&gt;</code><ul><li><code>input</code> 提交代码时自动将行尾转换为<code>LF</code>，检出代码时不转换</li><li><code>true</code> 在检出代码时自动将行尾转换为<code>CRLF</code>，在提交代码时自动将行尾转换为<code>LF</code></li><li><code>false</code> 在检出和提交代码时都不自动转换行尾</li></ul></li><li><code>git config --global core.eol &lt;option&gt;</code><ul><li><code>lf</code> UNIX 行结束符，即<code>\\n</code></li><li><code>crlf</code> Windows 行结束符，即<code>\\r\\n</code></li></ul></li></ul><h2 id="创建仓库" tabindex="-1">创建仓库 <a class="header-anchor" href="#创建仓库" aria-label="Permalink to &quot;创建仓库&quot;">​</a></h2><ul><li><code>git init</code> 初始化仓库</li><li><code>git clone</code> 克隆仓库 <ul><li><code>git clone -b &lt;branch_name&gt; --single-branch &lt;url&gt;</code> 克隆指定的分支</li></ul></li></ul><h2 id="提交和修改" tabindex="-1">提交和修改 <a class="header-anchor" href="#提交和修改" aria-label="Permalink to &quot;提交和修改&quot;">​</a></h2><ul><li><code>git add</code><ul><li><code>git add &lt;file&gt;</code> 添加一个或多个文件到暂存区</li><li><code>git add &lt;dir&gt;</code> 添加指定目录到暂存区，包括子目录</li><li><code>git add .</code> 添加当前目录下的所有文件到暂存区</li></ul></li><li><code>git commit</code><ul><li><code>git commit -m &lt;message&gt;</code> 提交暂存区到本地仓库中，<code>&lt;message&gt;</code> 可以是一些备注信息</li><li><code>git commit &lt;file&gt; -m &lt;message&gt;</code> 提交暂存区的指定文件到仓库区</li><li><code>git commit -a</code> 直接提交，不需要执行<code>git add</code>命令</li></ul></li><li><code>git status</code> 查看仓库的状态，显示有变更的文件</li><li><code>git diff</code><ul><li><code>git diff &lt;file&gt;</code> 查看指定文件暂存区和工作区的差异</li></ul></li><li><code>git reset</code> 回退版本</li><li><code>git rm</code><ul><li><code>git rm &lt;file&gt;</code> 将文件从暂存区和工作区中删除</li><li><code>git rm -rf &lt;dir&gt;</code> 递归删除指定目录下的所有内容</li></ul></li><li><code>git mv</code><ul><li><code>git mv &lt;file&gt; &lt;new_file&gt;</code> 移动或重命名工作区文件</li></ul></li><li><code>git checkout</code><ul><li><code>git checkout -- &lt;file&gt;</code> 将指定文件恢复到最新的提交状态，丢弃所有未提交的更改，常用于撤销文件的修改</li></ul></li><li><code>git restore</code><ul><li><code>git restore &lt;file&gt;</code> 撤销指定文件的修改</li><li><code>git restore .</code> 撤销所有文件的修改</li></ul></li></ul><h2 id="日志" tabindex="-1">日志 <a class="header-anchor" href="#日志" aria-label="Permalink to &quot;日志&quot;">​</a></h2><ul><li><code>git log</code> 查看历史提交记录 <ul><li><code>git log --oneline</code> 精简提交历史</li></ul></li><li><code>git blame &lt;file&gt;</code> 以列表形式查看指定文件的历史修改记录</li></ul><h2 id="远程操作" tabindex="-1">远程操作 <a class="header-anchor" href="#远程操作" aria-label="Permalink to &quot;远程操作&quot;">​</a></h2><ul><li><code>git remote</code> 列出当前仓库中已配置的远程仓库 <ul><li><code>git remote -v</code> 列出当前仓库中已配置的远程仓库，并显示它们的 URL</li><li><code>git remote add &lt;remote_name&gt; &lt;remote_url&gt;</code> 添加一个新的远程仓库</li><li><code>git remote rename &lt;old_name&gt; &lt;new_name&gt;</code> 将已配置的远程仓库重命名</li><li><code>git remote remove &lt;remote_name&gt;</code> 从当前仓库中删除指定的远程仓库</li><li><code>git remote set-url &lt;remote_name&gt; &lt;new_url&gt;</code> 修改指定远程仓库的 URL</li><li><code>git remote show &lt;remote_name&gt;</code> 显示指定远程仓库的详细信息</li><li><code>git remote prune origin</code> 清理无效的远程分支信息</li></ul></li><li><code>get fetch</code> 用于从远程仓库拉取代码 <ul><li><code>git merge &lt;branch_name&gt;</code> 将指定分支合并到当前分支</li></ul></li><li><code>git pull</code> 从远程仓库拉取代码并合并本地的版本</li><li><code>git push</code><ul><li><code>git push &lt;remote_name&gt; &lt;branch_name&gt;</code> 推送本地分支到远程仓库</li><li><code>git push &lt;remote_name&gt; -d &lt;branch_name&gt;</code> 删除远程仓库的指定分支</li></ul></li></ul><h2 id="分支管理" tabindex="-1">分支管理 <a class="header-anchor" href="#分支管理" aria-label="Permalink to &quot;分支管理&quot;">​</a></h2><ul><li><code>git branch</code> 列出所有本地分支 <ul><li><code>git branch -r</code> 查看远程分支</li><li><code>git branch -a</code> 查看所有分支</li><li><code>git branch &lt;branch_name&gt;</code> 创建本地分支</li><li><code>git branch -d &lt;branch_name&gt;</code> 删除本地分支</li><li><code>git branch -D &lt;branch_name&gt;</code> 强制删除本地分支</li><li><code>git branch -m &lt;old_branch_name&gt; &lt;new_branch_name&gt;</code> 重命名本地分支</li></ul></li><li><code>git checkout</code><ul><li><code>git checkout -</code> 切换到前一个分支</li><li><code>git checkout &lt;branch_name&gt;</code> 切换到指定分支</li><li><code>git checkout --orphan &lt;branch_name&gt;</code> 创建一个空的分支</li><li><code>git checkout -b &lt;branch_name&gt;</code> 基于当前分支创建并切换到指定分支</li><li><code>git checkout -b &lt;branch_name&gt; &lt;local_branch_name&gt;</code> 基于本地分支创建并切换到指定分支</li><li><code>git checkout -b &lt;branch_name&gt; &lt;remote_name&gt;/&lt;branch_name&gt;</code> 基于远程分支创建并切换到指定分支</li><li><code>git checkout tags/&lt;tag_name&gt;</code> 切换到标签</li><li><code>git checkout &lt;commit_hash&gt;</code> 切换到指定的提交状态</li></ul></li><li><code>git stash</code> 暂存当前修改 <ul><li><code>git stash save &quot;message&quot;</code> 暂存当前修改，并添加备注</li><li><code>git stash list</code> 列出所有暂存</li><li><code>git stash pop</code> 恢复最近一次暂存</li><li><code>git stash apply</code> 恢复最近一次暂存</li><li><code>git stash drop</code> 删除最近一次暂存</li><li><code>git stash clear</code> 删除所有暂存</li></ul></li><li><code>git tag</code><ul><li><code>git tag &lt;tag_name&gt;</code> 基于当前分支创建一个标签</li><li><code>git tag &lt;tag_name&gt; &lt;commit_id&gt;</code> 基于指定提交创建一个标签</li><li><code>git tag -a &lt;tag_name&gt; -m &lt;message&gt;</code> 基于当前分支创建一个带注释的标签</li><li><code>git tag -a &lt;tag_name&gt; &lt;commit_id&gt; -m &lt;message&gt;</code> 基于指定提交创建一个带注释的标签</li><li><code>git tag -d &lt;tag-name&gt;</code> 删除指定标签</li><li><code>git push &lt;remote_name&gt; &lt;tag_name&gt;</code> 推送一个本地标签</li><li><code>git push &lt;remote_name&gt; :refs/tags/&lt;tag_name&gt;</code> 删除一个远程标签</li><li><code>git push &lt;remote_name&gt; --tags</code> 推送所有本地标签</li></ul></li><li><code>git rebase</code> 变基 <ul><li><code>git rebase &lt;base-branch&gt;</code> 将当前分支变基到指定分支</li><li><code>git rebase -i &lt;base-branch&gt;</code> 将当前分支变基到指定分支，并进入交互模式</li><li><code>git rebase --abort</code> 终止变基</li><li><code>git rebase --continue</code> 继续变基</li></ul></li></ul><h2 id="本地拉取pr进行预览" tabindex="-1">本地拉取PR进行预览 <a class="header-anchor" href="#本地拉取pr进行预览" aria-label="Permalink to &quot;本地拉取PR进行预览&quot;">​</a></h2><p>格式为<code>git fetch origin pull/PRId/head:LocalBranchName</code></p><p>其中，<code>PRId</code>为该 Pull Request 的序号，<code>LocalBranchName</code>为拉取到本地后的分支名称</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fetch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull/123/head:pr123</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',16),d=[c];function a(g,n,r,s,h,m){return l(),i("div",null,d)}const b=e(o,[["render",a]]);export{_ as __pageData,b as default};
