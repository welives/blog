import{_ as i,o as s,c as a,R as n}from"./chunks/framework.0ARc0mp4.js";const F=JSON.parse('{"title":"Docker安装Nginx服务","description":"Docker安装Nginx服务","frontmatter":{"title":"Docker安装Nginx服务","head":[["meta",{"name":"description","content":"Docker安装Nginx服务"}],["meta",{"name":"keywords","content":"docker 容器 镜像 nginx"}]]},"headers":[],"relativePath":"devops/docker/nginx.md","filePath":"devops/docker/nginx.md","lastUpdated":1715177349000}'),e={name:"devops/docker/nginx.md"},t=n('<h2 id="拉取nginx镜像" tabindex="-1">拉取Nginx镜像 <a class="header-anchor" href="#拉取nginx镜像" aria-label="Permalink to &quot;拉取Nginx镜像&quot;">​</a></h2><p>使用 Docker 命令从 Docker Hub 拉取最新的 Nginx 镜像</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="运行nginx容器" tabindex="-1">运行Nginx容器 <a class="header-anchor" href="#运行nginx容器" aria-label="Permalink to &quot;运行Nginx容器&quot;">​</a></h2><p>Nginx 镜像被拉取完成后，可以通过以下命令运行一个 Nginx 容器</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8080</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-nginx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这条命令做了几件事情：</p><ul><li><code>--name docker-nginx</code>：给你的容器命名为 <code>docker-nginx</code></li><li><code>-d</code>：表示后台运行容器</li><li><code>-p 8080:80</code>：将容器的 80 端口映射到宿主机的 8080 端口。这意味着你可以通过访问宿主机的 8080 端口来访问 Nginx</li></ul><h2 id="验证nginx运行情况" tabindex="-1">验证Nginx运行情况 <a class="header-anchor" href="#验证nginx运行情况" aria-label="Permalink to &quot;验证Nginx运行情况&quot;">​</a></h2><p>在浏览器中输入 <code>http://localhost:8080</code> 或者使用命令行工具如 curl：<code>curl http://localhost:8080</code>。您应该能看到 Nginx 的欢迎页面，这表示 Nginx 正在运行</p><h2 id="自定义配置" tabindex="-1">自定义配置 <a class="header-anchor" href="#自定义配置" aria-label="Permalink to &quot;自定义配置&quot;">​</a></h2><p>你可能想根据需要自定义 Nginx 的配置。要做到这一点，您可以创建一个自定义的 Nginx 配置文件，并在启动容器时将其挂载到容器内部。例如</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8080</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /your_path/content:/usr/share/nginx/html:ro</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /your_path/nginx.conf:/etc/nginx/nginx.conf:ro</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-nginx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><code>-v /your_path/content:/usr/share/nginx/html:ro</code>：意思是将你宿主机中打包好的静态网站内容挂载到容器的 Nginx 服务器目录下</li><li><code>-v /your_path/nginx.conf:/etc/nginx/nginx.conf:ro</code>：意思是将你的 Nginx 配置文件挂载到容器中的正确位置</li></ul>',14),l=[t];function h(r,p,d,o,c,k){return s(),a("div",null,l)}const u=i(e,[["render",h]]);export{F as __pageData,u as default};
