import{_ as s,o as n,c as a,R as o}from"./chunks/framework.0ARc0mp4.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"about.md","filePath":"about.md","lastUpdated":1731407168000}'),t={name:"about.md"},i=o('<h2 id="who-am-i" tabindex="-1">Who am I? <a class="header-anchor" href="#who-am-i" aria-label="Permalink to &quot;Who am I?&quot;">​</a></h2><p>我是煎蛋，坐标南宁，一个2011年大专辍学的渣渣。从2012年开始参加工作，早年从事过网络运维，如今的主要工作是前端开发，同时也对后端开发和服务器运维有所涉猎，差不多算是全干工程师了吧。噢，忘了我还不太会PhotoShop，有空把这玩意也学学就是个合格的全干工程师了</p><p>除了敲代码以外，偶尔还会玩玩CSGO(CS2)、文明6、魔兽世界</p><p>这个笔记博客的创建初衷是记录多年的自学前端、后端和服务器运维相关技术的积累，方便翻查，希望对大家有所帮助</p><h2 id="吃饭的家伙" tabindex="-1">吃饭的家伙 <a class="header-anchor" href="#吃饭的家伙" aria-label="Permalink to &quot;吃饭的家伙&quot;">​</a></h2><h3 id="前端" tabindex="-1">前端 <a class="header-anchor" href="#前端" aria-label="Permalink to &quot;前端&quot;">​</a></h3><ul><li><span class="i-devicon:html5"></span><strong>HTML</strong> + <span class="i-devicon:css3"></span><strong>CSS</strong> + <span class="i-devicon:javascript"></span><strong>JavaScript</strong> + <span class="i-devicon:typescript"></span><strong>TypeScript</strong> + <strong>SCSS</strong>，熟练掌握</li><li><span class="i-devicon:vuejs"></span><strong>Vue</strong> + <strong>Uniapp</strong> + <span class="i-devicon:react"></span><strong>React</strong> + <strong>ReactNative</strong> + <strong>Taro</strong> + <strong>Ahooks</strong> + <span class="i-devicon:tailwindcss"></span><strong>TailwindCSS</strong> + <span class="i-simple-icons:unocss"></span><strong>UnoCSS</strong>，熟练掌握</li><li><strong>Vuex</strong> + <span class="i-logos:pinia"></span><strong>Pinia</strong> + <span class="i-logos:redux"></span><strong>Redux</strong> + <strong>Zustand</strong> + <strong>MMKV</strong>，这些是我在项目中使用过的状态管理库</li><li><span class="i-devicon:nuxtjs"></span><strong>Nuxt.js</strong> + <span class="i-devicon:nextjs"></span><strong>Next.js</strong> + <span class="i-devicon:reactnavigation"></span><strong>ReactNavigation</strong> + <strong>TanStack Query</strong> + <span class="i-devicon:antdesign"></span><strong>AntDesign</strong> + <strong>Umi.js</strong> + <span class="i-logos:element"></span><strong>Element</strong> + <strong>Vant</strong> + <strong>uView</strong> + <strong>echarts</strong>，都拿来做过项目，因为前端周边生态太繁杂，不敢说哪个熟练，都是看着文档在写</li><li><span class="i-devicon:flutter"></span><strong>Flutter</strong>，努力学习中</li><li><span class="i-skill-icons:jquery"></span><strong>jQuery</strong> + <span class="i-devicon:bootstrap"></span><strong>BootStrap</strong>，现在很少用了</li></ul><h3 id="后端" tabindex="-1">后端 <a class="header-anchor" href="#后端" aria-label="Permalink to &quot;后端&quot;">​</a></h3><ul><li><span class="i-devicon:nodejs"></span><strong>Nodejs</strong> + <span class="i-logos:express"></span> + <span class="i-logos:koa"></span> + <span class="i-devicon:nestjs"></span><strong>Nest.js</strong> + <span class="i-devicon:prisma"></span><strong>Prisma</strong> + <span class="i-logos:typeorm"></span><strong>TypeORM</strong> + <strong>Drizzle-ORM</strong>，熟练掌握</li><li><span class="i-devicon:postgresql"></span><strong>PostgreSQL</strong> + <span class="i-devicon:mysql"></span><strong>MySQL</strong> + <span class="i-devicon:mongodb"></span><strong>MongoDB</strong> + <span class="i-devicon:redis"></span><strong>Redis</strong></li><li>一些常用的配套工具：<span class="i-logos:pm2-icon"></span><strong>PM2</strong> + <span class="i-devicon:nodemon"></span><strong>Nodemon</strong> + <span class="i-logos:jwt-icon"></span><strong>JWT</strong> + <span class="i-devicon:swagger"></span><strong>Swagger</strong></li></ul><h3 id="工程化" tabindex="-1">工程化 <a class="header-anchor" href="#工程化" aria-label="Permalink to &quot;工程化&quot;">​</a></h3><ul><li><span class="i-devicon:vitejs"></span><strong>Vite</strong> + <span class="i-devicon:webpack"></span><strong>Webpack</strong> + <span class="i-devicon:postcss"></span><strong>PostCSS</strong>，不敢说特别熟练，但也用来搭建过不少基础项目了，还写过一个Vite体系下的插件</li><li><span class="i-devicon:eslint"></span><strong>ESLint</strong> + <strong>Prettier</strong>，用来规范代码格式，熟练掌握</li><li><span class="i-devicon:npm-wordmark"></span><strong>npm</strong> + <span class="i-devicon:pnpm"></span><strong>pnpm</strong>，现在都是用pnpm了，因为解决了幻影依赖的问题，而且速度也快</li></ul><h3 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h3><ul><li><span class="i-devicon:ubuntu"></span><strong>Ubuntu</strong> + <span class="i-devicon:centos"></span><strong>Centos</strong>，我常用的Linux就这俩</li><li><span class="i-devicon:vscode"></span><strong>VsCode</strong> + <span class="i-devicon:git"></span><strong>Git</strong> + <span class="i-devicon:github"></span><strong>Github</strong> + <span class="i-devicon:postman"></span><strong>PostMan</strong>，必备的生产力工具</li><li><span class="i-skill-icons:docker"></span><strong>Docker</strong>，我主要用来本地部署项目和起数据库服务</li><li><span class="i-skill-icons:nginx"></span><strong>Nginx</strong>，配合Docker使用，做反向代理、负载均衡等</li><li>面向搜索编程：<span class="i-devicon:google"></span><strong>Google</strong> + <span class="i-logos:bing"></span><strong>Bing</strong> + <span class="i-devicon:stackoverflow"></span><strong>StackOverflow</strong> + <span class="i-devicon:github"></span><strong>Github</strong> + <span class="i-simple-icons:gitee"></span><strong>Gitee</strong> + <span class="i-arcticons:openai-chatgpt"></span><strong>ChatGPT</strong></li><li>二层/三层交换机配置，好久没摸了，有点生疏</li></ul><h3 id="外语" tabindex="-1">外语 <a class="header-anchor" href="#外语" aria-label="Permalink to &quot;外语&quot;">​</a></h3><ul><li>日语，N3左右吧，看剧看日文漫画压力都不大，不要全是片假名就行，不然日本人自己看了都头疼</li><li>英语，疏于练习，退化到高中水平了，配合点机翻插件还能看英文文档的</li></ul><h3 id="联系我" tabindex="-1">联系我 <a class="header-anchor" href="#联系我" aria-label="Permalink to &quot;联系我&quot;">​</a></h3><p><a href="https://github.com/welives" target="_blank"><span class="i-devicon:github"></span></a></p>',17),r=[i];function e(l,g,c,p,d,h){return n(),a("div",null,r)}const m=s(t,[["render",e]]);export{v as __pageData,m as default};
